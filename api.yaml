openapi: 3.0.0
info:
    contact:
        name: Google
        url: https://google.com
    description: Manipulates events and other calendar data.
    license:
        name: Creative Commons Attribution 3.0
        url: http://creativecommons.org/licenses/by/3.0/
    termsOfService: https://developers.google.com/terms/
    title: Calendar
    version: v3
    x-apiClientRegistration:
        url: https://console.developers.google.com
    x-apisguru-categories:
        - time_management
    x-logo:
        url: https://api.apis.guru/v2/cache/logo/https_www.gstatic.com_images_icons_material_product_2x_calendar_64dp.png
    x-origin:
        - converter:
              url: https://github.com/lucybot/api-spec-converter
              version: 2.7.31
          format: google
          url: https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest
          version: v1
    x-preferred: true
    x-providerName: googleapis.com
    x-serviceName: calendar
externalDocs:
    url: https://developers.google.com/google-apps/calendar/firstapp
tags:
    - name: acl
    - name: calendarList
    - name: calendars
    - name: channels
    - name: colors
    - name: events
    - name: freebusy
    - name: settings
security:
    - ApiKeyAuth: [] # use the same name as under securitySchemes
paths:
    /calendars:
        parameters:
            - $ref: "#/components/parameters/alt"
            - $ref: "#/components/parameters/fields"
            - $ref: "#/components/parameters/key"
            - $ref: "#/components/parameters/oauth_token"
            - $ref: "#/components/parameters/prettyPrint"
            - $ref: "#/components/parameters/quotaUser"
            - $ref: "#/components/parameters/userIp"
        post:
            description: Creates a secondary calendar.
            operationId: calendar.calendars.insert
            requestBody:
                $ref: "#/components/requestBodies/Calendar"
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/Calendar"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
            tags:
                - calendars
    "/calendars/{calendarId}":
        delete:
            description:
                Deletes a secondary calendar. Use calendars.clear for clearing all
                events on primary calendars.
            operationId: calendar.calendars.delete
            parameters:
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Successful response
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
            tags:
                - calendars
        get:
            description: Returns metadata for a calendar.
            operationId: calendar.calendars.get
            parameters:
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/Calendar"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.readonly
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.readonly
            tags:
                - calendars
        parameters:
            - $ref: "#/components/parameters/alt"
            - $ref: "#/components/parameters/fields"
            - $ref: "#/components/parameters/key"
            - $ref: "#/components/parameters/oauth_token"
            - $ref: "#/components/parameters/prettyPrint"
            - $ref: "#/components/parameters/quotaUser"
            - $ref: "#/components/parameters/userIp"
        patch:
            description: Updates metadata for a calendar. This method supports patch semantics.
            operationId: calendar.calendars.patch
            parameters:
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
            requestBody:
                $ref: "#/components/requestBodies/Calendar"
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/Calendar"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
            tags:
                - calendars
        put:
            description: Updates metadata for a calendar.
            operationId: calendar.calendars.update
            parameters:
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
            requestBody:
                $ref: "#/components/requestBodies/Calendar"
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/Calendar"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
            tags:
                - calendars
    "/calendars/{calendarId}/acl":
        get:
            description: Returns the rules in the access control list for the calendar.
            operationId: calendar.acl.list
            parameters:
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
                - description:
                      Maximum number of entries returned on one result page. By default
                      the value is 100 entries. The page size can never be larger than 250
                      entries. Optional.
                  in: query
                  name: maxResults
                  schema:
                      type: integer
                      minimum: 1
                - description: Token specifying which result page to return. Optional.
                  in: query
                  name: pageToken
                  schema:
                      type: string
                - description:
                      Whether to include deleted ACLs in the result. Deleted ACLs are
                      represented by role equal to "none". Deleted ACLs will always be
                      included if syncToken is provided. Optional. The default is False.
                  in: query
                  name: showDeleted
                  schema:
                      type: boolean
                - description: >-
                      Token obtained from the nextSyncToken field returned on the last
                      page of results from the previous list request. It makes the result
                      of this list request contain only entries that have changed since
                      then. All entries deleted since the previous list request will
                      always be in the result set and it is not allowed to set showDeleted
                      to False.

                      If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.

                      Learn more about incremental synchronization.

                      Optional. The default is to return all entries.
                  in: query
                  name: syncToken
                  schema:
                      type: string
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/Acl"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
            tags:
                - acl
        parameters:
            - $ref: "#/components/parameters/alt"
            - $ref: "#/components/parameters/fields"
            - $ref: "#/components/parameters/key"
            - $ref: "#/components/parameters/oauth_token"
            - $ref: "#/components/parameters/prettyPrint"
            - $ref: "#/components/parameters/quotaUser"
            - $ref: "#/components/parameters/userIp"
        post:
            description: Creates an access control rule.
            operationId: calendar.acl.insert
            parameters:
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
                - description:
                      Whether to send notifications about the calendar sharing change.
                      Optional. The default is True.
                  in: query
                  name: sendNotifications
                  schema:
                      type: boolean
            requestBody:
                $ref: "#/components/requestBodies/AclRule"
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/AclRule"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
            tags:
                - acl
    "/calendars/{calendarId}/acl/watch":
        parameters:
            - $ref: "#/components/parameters/alt"
            - $ref: "#/components/parameters/fields"
            - $ref: "#/components/parameters/key"
            - $ref: "#/components/parameters/oauth_token"
            - $ref: "#/components/parameters/prettyPrint"
            - $ref: "#/components/parameters/quotaUser"
            - $ref: "#/components/parameters/userIp"
        post:
            description: Watch for changes to ACL resources.
            operationId: calendar.acl.watch
            parameters:
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
                - description:
                      Maximum number of entries returned on one result page. By default
                      the value is 100 entries. The page size can never be larger than 250
                      entries. Optional.
                  in: query
                  name: maxResults
                  schema:
                      type: integer
                      minimum: 1
                - description: Token specifying which result page to return. Optional.
                  in: query
                  name: pageToken
                  schema:
                      type: string
                - description:
                      Whether to include deleted ACLs in the result. Deleted ACLs are
                      represented by role equal to "none". Deleted ACLs will always be
                      included if syncToken is provided. Optional. The default is False.
                  in: query
                  name: showDeleted
                  schema:
                      type: boolean
                - description: >-
                      Token obtained from the nextSyncToken field returned on the last
                      page of results from the previous list request. It makes the result
                      of this list request contain only entries that have changed since
                      then. All entries deleted since the previous list request will
                      always be in the result set and it is not allowed to set showDeleted
                      to False.

                      If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.

                      Learn more about incremental synchronization.

                      Optional. The default is to return all entries.
                  in: query
                  name: syncToken
                  schema:
                      type: string
            requestBody:
                $ref: "#/components/requestBodies/Channel"
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/Channel"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
            tags:
                - acl
    "/calendars/{calendarId}/acl/{ruleId}":
        delete:
            description: Deletes an access control rule.
            operationId: calendar.acl.delete
            parameters:
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
                - description: ACL rule identifier.
                  in: path
                  name: ruleId
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Successful response
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
            tags:
                - acl
        get:
            description: Returns an access control rule.
            operationId: calendar.acl.get
            parameters:
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
                - description: ACL rule identifier.
                  in: path
                  name: ruleId
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/AclRule"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.readonly
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.readonly
            tags:
                - acl
        parameters:
            - $ref: "#/components/parameters/alt"
            - $ref: "#/components/parameters/fields"
            - $ref: "#/components/parameters/key"
            - $ref: "#/components/parameters/oauth_token"
            - $ref: "#/components/parameters/prettyPrint"
            - $ref: "#/components/parameters/quotaUser"
            - $ref: "#/components/parameters/userIp"
        patch:
            description: Updates an access control rule. This method supports patch semantics.
            operationId: calendar.acl.patch
            parameters:
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
                - description: ACL rule identifier.
                  in: path
                  name: ruleId
                  required: true
                  schema:
                      type: string
                - description:
                      Whether to send notifications about the calendar sharing change.
                      Note that there are no notifications on access removal. Optional.
                      The default is True.
                  in: query
                  name: sendNotifications
                  schema:
                      type: boolean
            requestBody:
                $ref: "#/components/requestBodies/AclRule"
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/AclRule"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
            tags:
                - acl
        put:
            description: Updates an access control rule.
            operationId: calendar.acl.update
            parameters:
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
                - description: ACL rule identifier.
                  in: path
                  name: ruleId
                  required: true
                  schema:
                      type: string
                - description:
                      Whether to send notifications about the calendar sharing change.
                      Note that there are no notifications on access removal. Optional.
                      The default is True.
                  in: query
                  name: sendNotifications
                  schema:
                      type: boolean
            requestBody:
                $ref: "#/components/requestBodies/AclRule"
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/AclRule"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
            tags:
                - acl
    "/calendars/{calendarId}/clear":
        parameters:
            - $ref: "#/components/parameters/alt"
            - $ref: "#/components/parameters/fields"
            - $ref: "#/components/parameters/key"
            - $ref: "#/components/parameters/oauth_token"
            - $ref: "#/components/parameters/prettyPrint"
            - $ref: "#/components/parameters/quotaUser"
            - $ref: "#/components/parameters/userIp"
        post:
            description:
                Clears a primary calendar. This operation deletes all events associated
                with the primary calendar of an account.
            operationId: calendar.calendars.clear
            parameters:
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Successful response
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
            tags:
                - calendars
    "/calendars/{calendarId}/events":
        get:
            description: Returns events on the specified calendar.
            operationId: calendar.events.list
            parameters:
                - description:
                      Whether to always include a value in the email field for the
                      organizer, creator and attendees, even if no real email is available
                      (i.e. a generated, non-working value will be provided). The use of
                      this option is discouraged and should only be used by clients which
                      cannot handle the absence of an email address value in the mentioned
                      places. Optional. The default is False.
                  in: query
                  name: alwaysIncludeEmail
                  schema:
                      type: boolean
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
                - description:
                      Specifies event ID in the iCalendar format to be included in the
                      response. Optional.
                  in: query
                  name: iCalUID
                  schema:
                      type: string
                - description:
                      The maximum number of attendees to include in the response. If there
                      are more than the specified number of attendees, only the
                      participant is returned. Optional.
                  in: query
                  name: maxAttendees
                  schema:
                      type: integer
                      minimum: 1
                - description:
                      Maximum number of events returned on one result page. The number of
                      events in the resulting page may be less than this value, or none at
                      all, even if there are more events matching the query. Incomplete
                      pages can be detected by a non-empty nextPageToken field in the
                      response. By default the value is 250 events. The page size can
                      never be larger than 2500 events. Optional.
                  in: query
                  name: maxResults
                  schema:
                      type: integer
                      minimum: 1
                      default: 250
                - description:
                      The order of the events returned in the result. Optional. The
                      default is an unspecified, stable order.
                  in: query
                  name: orderBy
                  schema:
                      type: string
                      enum:
                          - startTime
                          - updated
                - description: Token specifying which result page to return. Optional.
                  in: query
                  name: pageToken
                  schema:
                      type: string
                - description:
                      Extended properties constraint specified as propertyName=value.
                      Matches only private properties. This parameter might be repeated
                      multiple times to return events that match all given constraints.
                  in: query
                  name: privateExtendedProperty
                  explode: true
                  schema:
                      type: array
                      items:
                          type: string
                - description:
                      Free text search terms to find events that match these terms in any
                      field, except for extended properties. Optional.
                  in: query
                  name: q
                  schema:
                      type: string
                - description:
                      Extended properties constraint specified as propertyName=value.
                      Matches only shared properties. This parameter might be repeated
                      multiple times to return events that match all given constraints.
                  in: query
                  name: sharedExtendedProperty
                  explode: true
                  schema:
                      type: array
                      items:
                          type: string
                - description:
                      Whether to include deleted events (with status equals "cancelled")
                      in the result. Cancelled instances of recurring events (but not the
                      underlying recurring event) will still be included if showDeleted
                      and singleEvents are both False. If showDeleted and singleEvents are
                      both True, only single instances of deleted events (but not the
                      underlying recurring events) are returned. Optional. The default is
                      False.
                  in: query
                  name: showDeleted
                  schema:
                      type: boolean
                - description:
                      Whether to include hidden invitations in the result. Optional. The
                      default is False.
                  in: query
                  name: showHiddenInvitations
                  schema:
                      type: boolean
                - description:
                      Whether to expand recurring events into instances and only return
                      single one-off events and instances of recurring events, but not the
                      underlying recurring events themselves. Optional. The default is
                      False.
                  in: query
                  name: singleEvents
                  schema:
                      type: boolean
                - description: >-
                      Token obtained from the nextSyncToken field returned on the last
                      page of results from the previous list request. It makes the result
                      of this list request contain only entries that have changed since
                      then. All events deleted since the previous list request will always
                      be in the result set and it is not allowed to set showDeleted to
                      False.

                      There are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state.


                      These are:

                      - iCalUID

                      - orderBy

                      - privateExtendedProperty

                      - q

                      - sharedExtendedProperty

                      - timeMin

                      - timeMax

                      - updatedMin If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.

                      Learn more about incremental synchronization.

                      Optional. The default is to return all entries.
                  in: query
                  name: syncToken
                  schema:
                      type: string
                - description:
                      Upper bound (exclusive) for an event's start time to filter by.
                      Optional. The default is not to filter by start time. Must be an
                      RFC3339 timestamp with mandatory time zone offset, for example,
                      2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be
                      provided but are ignored. If timeMin is set, timeMax must be greater
                      than timeMin.
                  in: query
                  name: timeMax
                  schema:
                      type: string
                - description:
                      Lower bound (exclusive) for an event's end time to filter by.
                      Optional. The default is not to filter by end time. Must be an
                      RFC3339 timestamp with mandatory time zone offset, for example,
                      2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be
                      provided but are ignored. If timeMax is set, timeMin must be smaller
                      than timeMax.
                  in: query
                  name: timeMin
                  schema:
                      type: string
                - description:
                      Time zone used in the response. Optional. The default is the time
                      zone of the calendar.
                  in: query
                  name: timeZone
                  schema:
                      type: string
                - description:
                      Lower bound for an event's last modification time (as a RFC3339
                      timestamp) to filter by. When specified, entries deleted since this
                      time will always be included regardless of showDeleted. Optional.
                      The default is not to filter by last modification time.
                  in: query
                  name: updatedMin
                  schema:
                      type: string
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/Events"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.events
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.events
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.events.readonly
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.events.readonly
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.readonly
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.readonly
            tags:
                - events
        parameters:
            - $ref: "#/components/parameters/alt"
            - $ref: "#/components/parameters/fields"
            - $ref: "#/components/parameters/key"
            - $ref: "#/components/parameters/oauth_token"
            - $ref: "#/components/parameters/prettyPrint"
            - $ref: "#/components/parameters/quotaUser"
            - $ref: "#/components/parameters/userIp"
        post:
            description: Creates an event.
            operationId: calendar.events.insert
            parameters:
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
                - description:
                      Version number of conference data supported by the API client.
                      Version 0 assumes no conference data support and ignores conference
                      data in the event's body. Version 1 enables support for copying of
                      ConferenceData as well as for creating new conferences using the
                      createRequest field of conferenceData. The default is 0.
                  in: query
                  name: conferenceDataVersion
                  schema:
                      type: integer
                      minimum: 0
                      maximum: 1
                - description:
                      The maximum number of attendees to include in the response. If there
                      are more than the specified number of attendees, only the
                      participant is returned. Optional.
                  in: query
                  name: maxAttendees
                  schema:
                      type: integer
                      minimum: 1
                - description: >-
                      Deprecated. Please use sendUpdates instead.


                      Whether to send notifications about the creation of the new event. Note that some emails might still be sent even if you set the value to false. The default is false.
                  in: query
                  name: sendNotifications
                  schema:
                      type: boolean
                - description:
                      Whether to send notifications about the creation of the new event.
                      Note that some emails might still be sent. The default is false.
                  in: query
                  name: sendUpdates
                  schema:
                      type: string
                      enum:
                          - all
                          - externalOnly
                          - none
                - description:
                      Whether API client performing operation supports event attachments.
                      Optional. The default is False.
                  in: query
                  name: supportsAttachments
                  schema:
                      type: boolean
            requestBody:
                $ref: "#/components/requestBodies/Event"
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/Event"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.events
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.events
            tags:
                - events
    "/calendars/{calendarId}/events/import":
        parameters:
            - $ref: "#/components/parameters/alt"
            - $ref: "#/components/parameters/fields"
            - $ref: "#/components/parameters/key"
            - $ref: "#/components/parameters/oauth_token"
            - $ref: "#/components/parameters/prettyPrint"
            - $ref: "#/components/parameters/quotaUser"
            - $ref: "#/components/parameters/userIp"
        post:
            description:
                Imports an event. This operation is used to add a private copy of an
                existing event to a calendar.
            operationId: calendar.events.import
            parameters:
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
                - description:
                      Version number of conference data supported by the API client.
                      Version 0 assumes no conference data support and ignores conference
                      data in the event's body. Version 1 enables support for copying of
                      ConferenceData as well as for creating new conferences using the
                      createRequest field of conferenceData. The default is 0.
                  in: query
                  name: conferenceDataVersion
                  schema:
                      type: integer
                      minimum: 0
                      maximum: 1
                - description:
                      Whether API client performing operation supports event attachments.
                      Optional. The default is False.
                  in: query
                  name: supportsAttachments
                  schema:
                      type: boolean
            requestBody:
                $ref: "#/components/requestBodies/Event"
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/Event"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.events
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.events
            tags:
                - events
    "/calendars/{calendarId}/events/quickAdd":
        parameters:
            - $ref: "#/components/parameters/alt"
            - $ref: "#/components/parameters/fields"
            - $ref: "#/components/parameters/key"
            - $ref: "#/components/parameters/oauth_token"
            - $ref: "#/components/parameters/prettyPrint"
            - $ref: "#/components/parameters/quotaUser"
            - $ref: "#/components/parameters/userIp"
        post:
            description: Creates an event based on a simple text string.
            operationId: calendar.events.quickAdd
            parameters:
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
                - description: >-
                      Deprecated. Please use sendUpdates instead.


                      Whether to send notifications about the creation of the event. Note that some emails might still be sent even if you set the value to false. The default is false.
                  in: query
                  name: sendNotifications
                  schema:
                      type: boolean
                - description:
                      Guests who should receive notifications about the creation of the
                      new event.
                  in: query
                  name: sendUpdates
                  schema:
                      type: string
                      enum:
                          - all
                          - externalOnly
                          - none
                - description: The text describing the event to be created.
                  in: query
                  name: text
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/Event"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.events
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.events
            tags:
                - events
    "/calendars/{calendarId}/events/watch":
        parameters:
            - $ref: "#/components/parameters/alt"
            - $ref: "#/components/parameters/fields"
            - $ref: "#/components/parameters/key"
            - $ref: "#/components/parameters/oauth_token"
            - $ref: "#/components/parameters/prettyPrint"
            - $ref: "#/components/parameters/quotaUser"
            - $ref: "#/components/parameters/userIp"
        post:
            description: Watch for changes to Events resources.
            operationId: calendar.events.watch
            parameters:
                - description:
                      Whether to always include a value in the email field for the
                      organizer, creator and attendees, even if no real email is available
                      (i.e. a generated, non-working value will be provided). The use of
                      this option is discouraged and should only be used by clients which
                      cannot handle the absence of an email address value in the mentioned
                      places. Optional. The default is False.
                  in: query
                  name: alwaysIncludeEmail
                  schema:
                      type: boolean
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
                - description:
                      Specifies event ID in the iCalendar format to be included in the
                      response. Optional.
                  in: query
                  name: iCalUID
                  schema:
                      type: string
                - description:
                      The maximum number of attendees to include in the response. If there
                      are more than the specified number of attendees, only the
                      participant is returned. Optional.
                  in: query
                  name: maxAttendees
                  schema:
                      type: integer
                      minimum: 1
                - description:
                      Maximum number of events returned on one result page. The number of
                      events in the resulting page may be less than this value, or none at
                      all, even if there are more events matching the query. Incomplete
                      pages can be detected by a non-empty nextPageToken field in the
                      response. By default the value is 250 events. The page size can
                      never be larger than 2500 events. Optional.
                  in: query
                  name: maxResults
                  schema:
                      type: integer
                      minimum: 1
                      default: 250
                - description:
                      The order of the events returned in the result. Optional. The
                      default is an unspecified, stable order.
                  in: query
                  name: orderBy
                  schema:
                      type: string
                      enum:
                          - startTime
                          - updated
                - description: Token specifying which result page to return. Optional.
                  in: query
                  name: pageToken
                  schema:
                      type: string
                - description:
                      Extended properties constraint specified as propertyName=value.
                      Matches only private properties. This parameter might be repeated
                      multiple times to return events that match all given constraints.
                  in: query
                  name: privateExtendedProperty
                  explode: true
                  schema:
                      type: array
                      items:
                          type: string
                - description:
                      Free text search terms to find events that match these terms in any
                      field, except for extended properties. Optional.
                  in: query
                  name: q
                  schema:
                      type: string
                - description:
                      Extended properties constraint specified as propertyName=value.
                      Matches only shared properties. This parameter might be repeated
                      multiple times to return events that match all given constraints.
                  in: query
                  name: sharedExtendedProperty
                  explode: true
                  schema:
                      type: array
                      items:
                          type: string
                - description:
                      Whether to include deleted events (with status equals "cancelled")
                      in the result. Cancelled instances of recurring events (but not the
                      underlying recurring event) will still be included if showDeleted
                      and singleEvents are both False. If showDeleted and singleEvents are
                      both True, only single instances of deleted events (but not the
                      underlying recurring events) are returned. Optional. The default is
                      False.
                  in: query
                  name: showDeleted
                  schema:
                      type: boolean
                - description:
                      Whether to include hidden invitations in the result. Optional. The
                      default is False.
                  in: query
                  name: showHiddenInvitations
                  schema:
                      type: boolean
                - description:
                      Whether to expand recurring events into instances and only return
                      single one-off events and instances of recurring events, but not the
                      underlying recurring events themselves. Optional. The default is
                      False.
                  in: query
                  name: singleEvents
                  schema:
                      type: boolean
                - description: >-
                      Token obtained from the nextSyncToken field returned on the last
                      page of results from the previous list request. It makes the result
                      of this list request contain only entries that have changed since
                      then. All events deleted since the previous list request will always
                      be in the result set and it is not allowed to set showDeleted to
                      False.

                      There are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state.


                      These are:

                      - iCalUID

                      - orderBy

                      - privateExtendedProperty

                      - q

                      - sharedExtendedProperty

                      - timeMin

                      - timeMax

                      - updatedMin If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.

                      Learn more about incremental synchronization.

                      Optional. The default is to return all entries.
                  in: query
                  name: syncToken
                  schema:
                      type: string
                - description:
                      Upper bound (exclusive) for an event's start time to filter by.
                      Optional. The default is not to filter by start time. Must be an
                      RFC3339 timestamp with mandatory time zone offset, for example,
                      2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be
                      provided but are ignored. If timeMin is set, timeMax must be greater
                      than timeMin.
                  in: query
                  name: timeMax
                  schema:
                      type: string
                - description:
                      Lower bound (exclusive) for an event's end time to filter by.
                      Optional. The default is not to filter by end time. Must be an
                      RFC3339 timestamp with mandatory time zone offset, for example,
                      2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be
                      provided but are ignored. If timeMax is set, timeMin must be smaller
                      than timeMax.
                  in: query
                  name: timeMin
                  schema:
                      type: string
                - description:
                      Time zone used in the response. Optional. The default is the time
                      zone of the calendar.
                  in: query
                  name: timeZone
                  schema:
                      type: string
                - description:
                      Lower bound for an event's last modification time (as a RFC3339
                      timestamp) to filter by. When specified, entries deleted since this
                      time will always be included regardless of showDeleted. Optional.
                      The default is not to filter by last modification time.
                  in: query
                  name: updatedMin
                  schema:
                      type: string
            requestBody:
                $ref: "#/components/requestBodies/Channel"
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/Channel"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.events
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.events
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.events.readonly
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.events.readonly
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.readonly
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.readonly
            tags:
                - events
    "/calendars/{calendarId}/events/{eventId}":
        delete:
            description: Deletes an event.
            operationId: calendar.events.delete
            parameters:
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
                - description: Event identifier.
                  in: path
                  name: eventId
                  required: true
                  schema:
                      type: string
                - description: >-
                      Deprecated. Please use sendUpdates instead.


                      Whether to send notifications about the deletion of the event. Note that some emails might still be sent even if you set the value to false. The default is false.
                  in: query
                  name: sendNotifications
                  schema:
                      type: boolean
                - description:
                      Guests who should receive notifications about the deletion of the
                      event.
                  in: query
                  name: sendUpdates
                  schema:
                      type: string
                      enum:
                          - all
                          - externalOnly
                          - none
            responses:
                "200":
                    description: Successful response
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.events
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.events
            tags:
                - events
        get:
            description: Returns an event.
            operationId: calendar.events.get
            parameters:
                - description:
                      Whether to always include a value in the email field for the
                      organizer, creator and attendees, even if no real email is available
                      (i.e. a generated, non-working value will be provided). The use of
                      this option is discouraged and should only be used by clients which
                      cannot handle the absence of an email address value in the mentioned
                      places. Optional. The default is False.
                  in: query
                  name: alwaysIncludeEmail
                  schema:
                      type: boolean
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
                - description: Event identifier.
                  in: path
                  name: eventId
                  required: true
                  schema:
                      type: string
                - description:
                      The maximum number of attendees to include in the response. If there
                      are more than the specified number of attendees, only the
                      participant is returned. Optional.
                  in: query
                  name: maxAttendees
                  schema:
                      type: integer
                      minimum: 1
                - description:
                      Time zone used in the response. Optional. The default is the time
                      zone of the calendar.
                  in: query
                  name: timeZone
                  schema:
                      type: string
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/Event"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.events
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.events
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.events.readonly
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.events.readonly
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.readonly
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.readonly
            tags:
                - events
        parameters:
            - $ref: "#/components/parameters/alt"
            - $ref: "#/components/parameters/fields"
            - $ref: "#/components/parameters/key"
            - $ref: "#/components/parameters/oauth_token"
            - $ref: "#/components/parameters/prettyPrint"
            - $ref: "#/components/parameters/quotaUser"
            - $ref: "#/components/parameters/userIp"
        patch:
            description: Updates an event. This method supports patch semantics.
            operationId: calendar.events.patch
            parameters:
                - description:
                      Whether to always include a value in the email field for the
                      organizer, creator and attendees, even if no real email is available
                      (i.e. a generated, non-working value will be provided). The use of
                      this option is discouraged and should only be used by clients which
                      cannot handle the absence of an email address value in the mentioned
                      places. Optional. The default is False.
                  in: query
                  name: alwaysIncludeEmail
                  schema:
                      type: boolean
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
                - description:
                      Version number of conference data supported by the API client.
                      Version 0 assumes no conference data support and ignores conference
                      data in the event's body. Version 1 enables support for copying of
                      ConferenceData as well as for creating new conferences using the
                      createRequest field of conferenceData. The default is 0.
                  in: query
                  name: conferenceDataVersion
                  schema:
                      type: integer
                      minimum: 0
                      maximum: 1
                - description: Event identifier.
                  in: path
                  name: eventId
                  required: true
                  schema:
                      type: string
                - description:
                      The maximum number of attendees to include in the response. If there
                      are more than the specified number of attendees, only the
                      participant is returned. Optional.
                  in: query
                  name: maxAttendees
                  schema:
                      type: integer
                      minimum: 1
                - description: >-
                      Deprecated. Please use sendUpdates instead.


                      Whether to send notifications about the event update (for example, description changes, etc.). Note that some emails might still be sent even if you set the value to false. The default is false.
                  in: query
                  name: sendNotifications
                  schema:
                      type: boolean
                - description:
                      Guests who should receive notifications about the event update (for
                      example, title changes, etc.).
                  in: query
                  name: sendUpdates
                  schema:
                      type: string
                      enum:
                          - all
                          - externalOnly
                          - none
                - description:
                      Whether API client performing operation supports event attachments.
                      Optional. The default is False.
                  in: query
                  name: supportsAttachments
                  schema:
                      type: boolean
            requestBody:
                $ref: "#/components/requestBodies/Event"
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/Event"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.events
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.events
            tags:
                - events
        put:
            description: Updates an event.
            operationId: calendar.events.update
            parameters:
                - description:
                      Whether to always include a value in the email field for the
                      organizer, creator and attendees, even if no real email is available
                      (i.e. a generated, non-working value will be provided). The use of
                      this option is discouraged and should only be used by clients which
                      cannot handle the absence of an email address value in the mentioned
                      places. Optional. The default is False.
                  in: query
                  name: alwaysIncludeEmail
                  schema:
                      type: boolean
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
                - description:
                      Version number of conference data supported by the API client.
                      Version 0 assumes no conference data support and ignores conference
                      data in the event's body. Version 1 enables support for copying of
                      ConferenceData as well as for creating new conferences using the
                      createRequest field of conferenceData. The default is 0.
                  in: query
                  name: conferenceDataVersion
                  schema:
                      type: integer
                      minimum: 0
                      maximum: 1
                - description: Event identifier.
                  in: path
                  name: eventId
                  required: true
                  schema:
                      type: string
                - description:
                      The maximum number of attendees to include in the response. If there
                      are more than the specified number of attendees, only the
                      participant is returned. Optional.
                  in: query
                  name: maxAttendees
                  schema:
                      type: integer
                      minimum: 1
                - description: >-
                      Deprecated. Please use sendUpdates instead.


                      Whether to send notifications about the event update (for example, description changes, etc.). Note that some emails might still be sent even if you set the value to false. The default is false.
                  in: query
                  name: sendNotifications
                  schema:
                      type: boolean
                - description:
                      Guests who should receive notifications about the event update (for
                      example, title changes, etc.).
                  in: query
                  name: sendUpdates
                  schema:
                      type: string
                      enum:
                          - all
                          - externalOnly
                          - none
                - description:
                      Whether API client performing operation supports event attachments.
                      Optional. The default is False.
                  in: query
                  name: supportsAttachments
                  schema:
                      type: boolean
            requestBody:
                $ref: "#/components/requestBodies/Event"
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/Event"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.events
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.events
            tags:
                - events
    "/calendars/{calendarId}/events/{eventId}/instances":
        get:
            description: Returns instances of the specified recurring event.
            operationId: calendar.events.instances
            parameters:
                - description:
                      Whether to always include a value in the email field for the
                      organizer, creator and attendees, even if no real email is available
                      (i.e. a generated, non-working value will be provided). The use of
                      this option is discouraged and should only be used by clients which
                      cannot handle the absence of an email address value in the mentioned
                      places. Optional. The default is False.
                  in: query
                  name: alwaysIncludeEmail
                  schema:
                      type: boolean
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
                - description: Recurring event identifier.
                  in: path
                  name: eventId
                  required: true
                  schema:
                      type: string
                - description:
                      The maximum number of attendees to include in the response. If there
                      are more than the specified number of attendees, only the
                      participant is returned. Optional.
                  in: query
                  name: maxAttendees
                  schema:
                      type: integer
                      minimum: 1
                - description:
                      Maximum number of events returned on one result page. By default the
                      value is 250 events. The page size can never be larger than 2500
                      events. Optional.
                  in: query
                  name: maxResults
                  schema:
                      type: integer
                      minimum: 1
                - description: The original start time of the instance in the result. Optional.
                  in: query
                  name: originalStart
                  schema:
                      type: string
                - description: Token specifying which result page to return. Optional.
                  in: query
                  name: pageToken
                  schema:
                      type: string
                - description:
                      Whether to include deleted events (with status equals "cancelled")
                      in the result. Cancelled instances of recurring events will still be
                      included if singleEvents is False. Optional. The default is False.
                  in: query
                  name: showDeleted
                  schema:
                      type: boolean
                - description:
                      Upper bound (exclusive) for an event's start time to filter by.
                      Optional. The default is not to filter by start time. Must be an
                      RFC3339 timestamp with mandatory time zone offset.
                  in: query
                  name: timeMax
                  schema:
                      type: string
                - description:
                      Lower bound (inclusive) for an event's end time to filter by.
                      Optional. The default is not to filter by end time. Must be an
                      RFC3339 timestamp with mandatory time zone offset.
                  in: query
                  name: timeMin
                  schema:
                      type: string
                - description:
                      Time zone used in the response. Optional. The default is the time
                      zone of the calendar.
                  in: query
                  name: timeZone
                  schema:
                      type: string
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/Events"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.events
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.events
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.events.readonly
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.events.readonly
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.readonly
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.readonly
            tags:
                - events
        parameters:
            - $ref: "#/components/parameters/alt"
            - $ref: "#/components/parameters/fields"
            - $ref: "#/components/parameters/key"
            - $ref: "#/components/parameters/oauth_token"
            - $ref: "#/components/parameters/prettyPrint"
            - $ref: "#/components/parameters/quotaUser"
            - $ref: "#/components/parameters/userIp"
    "/calendars/{calendarId}/events/{eventId}/move":
        parameters:
            - $ref: "#/components/parameters/alt"
            - $ref: "#/components/parameters/fields"
            - $ref: "#/components/parameters/key"
            - $ref: "#/components/parameters/oauth_token"
            - $ref: "#/components/parameters/prettyPrint"
            - $ref: "#/components/parameters/quotaUser"
            - $ref: "#/components/parameters/userIp"
        post:
            description: Moves an event to another calendar, i.e. changes an event's organizer.
            operationId: calendar.events.move
            parameters:
                - description:
                      Calendar identifier of the source calendar where the event currently
                      is on.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
                - description:
                      Calendar identifier of the target calendar where the event is to be
                      moved to.
                  in: query
                  name: destination
                  required: true
                  schema:
                      type: string
                - description: Event identifier.
                  in: path
                  name: eventId
                  required: true
                  schema:
                      type: string
                - description: >-
                      Deprecated. Please use sendUpdates instead.


                      Whether to send notifications about the change of the event's organizer. Note that some emails might still be sent even if you set the value to false. The default is false.
                  in: query
                  name: sendNotifications
                  schema:
                      type: boolean
                - description:
                      Guests who should receive notifications about the change of the
                      event's organizer.
                  in: query
                  name: sendUpdates
                  schema:
                      type: string
                      enum:
                          - all
                          - externalOnly
                          - none
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/Event"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.events
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.events
            tags:
                - events
    /channels/stop:
        parameters:
            - $ref: "#/components/parameters/alt"
            - $ref: "#/components/parameters/fields"
            - $ref: "#/components/parameters/key"
            - $ref: "#/components/parameters/oauth_token"
            - $ref: "#/components/parameters/prettyPrint"
            - $ref: "#/components/parameters/quotaUser"
            - $ref: "#/components/parameters/userIp"
        post:
            description: Stop watching resources through this channel
            operationId: calendar.channels.stop
            requestBody:
                $ref: "#/components/requestBodies/Channel"
            responses:
                "200":
                    description: Successful response
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.events
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.events
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.events.readonly
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.events.readonly
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.readonly
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.readonly
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.settings.readonly
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.settings.readonly
            tags:
                - channels
    /colors:
        get:
            description: Returns the color definitions for calendars and events.
            operationId: calendar.colors.get
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/Colors"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.readonly
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.readonly
            tags:
                - colors
        parameters:
            - $ref: "#/components/parameters/alt"
            - $ref: "#/components/parameters/fields"
            - $ref: "#/components/parameters/key"
            - $ref: "#/components/parameters/oauth_token"
            - $ref: "#/components/parameters/prettyPrint"
            - $ref: "#/components/parameters/quotaUser"
            - $ref: "#/components/parameters/userIp"
    /freeBusy:
        parameters:
            - $ref: "#/components/parameters/alt"
            - $ref: "#/components/parameters/fields"
            - $ref: "#/components/parameters/key"
            - $ref: "#/components/parameters/oauth_token"
            - $ref: "#/components/parameters/prettyPrint"
            - $ref: "#/components/parameters/quotaUser"
            - $ref: "#/components/parameters/userIp"
        post:
            description: Returns free/busy information for a set of calendars.
            operationId: calendar.freebusy.query
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/FreeBusyRequest"
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/FreeBusyResponse"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.readonly
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.readonly
            tags:
                - freebusy
    /users/me/calendarList:
        get:
            description: Returns the calendars on the user's calendar list.
            operationId: calendar.calendarList.list
            parameters:
                - description:
                      Maximum number of entries returned on one result page. By default
                      the value is 100 entries. The page size can never be larger than 250
                      entries. Optional.
                  in: query
                  name: maxResults
                  schema:
                      type: integer
                      minimum: 1
                - description:
                      The minimum access role for the user in the returned entries.
                      Optional. The default is no restriction.
                  in: query
                  name: minAccessRole
                  schema:
                      type: string
                      enum:
                          - freeBusyReader
                          - owner
                          - reader
                          - writer
                - description: Token specifying which result page to return. Optional.
                  in: query
                  name: pageToken
                  schema:
                      type: string
                - description:
                      Whether to include deleted calendar list entries in the result.
                      Optional. The default is False.
                  in: query
                  name: showDeleted
                  schema:
                      type: boolean
                - description: Whether to show hidden entries. Optional. The default is False.
                  in: query
                  name: showHidden
                  schema:
                      type: boolean
                - description: >-
                      Token obtained from the nextSyncToken field returned on the last
                      page of results from the previous list request. It makes the result
                      of this list request contain only entries that have changed since
                      then. If only read-only fields such as calendar properties or ACLs
                      have changed, the entry won't be returned. All entries deleted and
                      hidden since the previous list request will always be in the result
                      set and it is not allowed to set showDeleted neither showHidden to
                      False.

                      To ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.

                      If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.

                      Learn more about incremental synchronization.

                      Optional. The default is to return all entries.
                  in: query
                  name: syncToken
                  schema:
                      type: string
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/CalendarList"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.readonly
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.readonly
            tags:
                - calendarList
        parameters:
            - $ref: "#/components/parameters/alt"
            - $ref: "#/components/parameters/fields"
            - $ref: "#/components/parameters/key"
            - $ref: "#/components/parameters/oauth_token"
            - $ref: "#/components/parameters/prettyPrint"
            - $ref: "#/components/parameters/quotaUser"
            - $ref: "#/components/parameters/userIp"
        post:
            description: Inserts an existing calendar into the user's calendar list.
            operationId: calendar.calendarList.insert
            parameters:
                - description:
                      Whether to use the foregroundColor and backgroundColor fields to
                      write the calendar colors (RGB). If this feature is used, the
                      index-based colorId field will be set to the best matching option
                      automatically. Optional. The default is False.
                  in: query
                  name: colorRgbFormat
                  schema:
                      type: boolean
            requestBody:
                $ref: "#/components/requestBodies/CalendarListEntry"
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/CalendarListEntry"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
            tags:
                - calendarList
    /users/me/calendarList/watch:
        parameters:
            - $ref: "#/components/parameters/alt"
            - $ref: "#/components/parameters/fields"
            - $ref: "#/components/parameters/key"
            - $ref: "#/components/parameters/oauth_token"
            - $ref: "#/components/parameters/prettyPrint"
            - $ref: "#/components/parameters/quotaUser"
            - $ref: "#/components/parameters/userIp"
        post:
            description: Watch for changes to CalendarList resources.
            operationId: calendar.calendarList.watch
            parameters:
                - description:
                      Maximum number of entries returned on one result page. By default
                      the value is 100 entries. The page size can never be larger than 250
                      entries. Optional.
                  in: query
                  name: maxResults
                  schema:
                      type: integer
                      minimum: 1
                - description:
                      The minimum access role for the user in the returned entries.
                      Optional. The default is no restriction.
                  in: query
                  name: minAccessRole
                  schema:
                      type: string
                      enum:
                          - freeBusyReader
                          - owner
                          - reader
                          - writer
                - description: Token specifying which result page to return. Optional.
                  in: query
                  name: pageToken
                  schema:
                      type: string
                - description:
                      Whether to include deleted calendar list entries in the result.
                      Optional. The default is False.
                  in: query
                  name: showDeleted
                  schema:
                      type: boolean
                - description: Whether to show hidden entries. Optional. The default is False.
                  in: query
                  name: showHidden
                  schema:
                      type: boolean
                - description: >-
                      Token obtained from the nextSyncToken field returned on the last
                      page of results from the previous list request. It makes the result
                      of this list request contain only entries that have changed since
                      then. If only read-only fields such as calendar properties or ACLs
                      have changed, the entry won't be returned. All entries deleted and
                      hidden since the previous list request will always be in the result
                      set and it is not allowed to set showDeleted neither showHidden to
                      False.

                      To ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.

                      If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.

                      Learn more about incremental synchronization.

                      Optional. The default is to return all entries.
                  in: query
                  name: syncToken
                  schema:
                      type: string
            requestBody:
                $ref: "#/components/requestBodies/Channel"
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/Channel"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.readonly
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.readonly
            tags:
                - calendarList
    "/users/me/calendarList/{calendarId}":
        delete:
            description: Removes a calendar from the user's calendar list.
            operationId: calendar.calendarList.delete
            parameters:
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Successful response
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
            tags:
                - calendarList
        get:
            description: Returns a calendar from the user's calendar list.
            operationId: calendar.calendarList.get
            parameters:
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/CalendarListEntry"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.readonly
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.readonly
            tags:
                - calendarList
        parameters:
            - $ref: "#/components/parameters/alt"
            - $ref: "#/components/parameters/fields"
            - $ref: "#/components/parameters/key"
            - $ref: "#/components/parameters/oauth_token"
            - $ref: "#/components/parameters/prettyPrint"
            - $ref: "#/components/parameters/quotaUser"
            - $ref: "#/components/parameters/userIp"
        patch:
            description:
                Updates an existing calendar on the user's calendar list. This method
                supports patch semantics.
            operationId: calendar.calendarList.patch
            parameters:
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
                - description:
                      Whether to use the foregroundColor and backgroundColor fields to
                      write the calendar colors (RGB). If this feature is used, the
                      index-based colorId field will be set to the best matching option
                      automatically. Optional. The default is False.
                  in: query
                  name: colorRgbFormat
                  schema:
                      type: boolean
            requestBody:
                $ref: "#/components/requestBodies/CalendarListEntry"
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/CalendarListEntry"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
            tags:
                - calendarList
        put:
            description: Updates an existing calendar on the user's calendar list.
            operationId: calendar.calendarList.update
            parameters:
                - description:
                      Calendar identifier. To retrieve calendar IDs call the
                      calendarList.list method. If you want to access the primary calendar
                      of the currently logged in user, use the "primary" keyword.
                  in: path
                  name: calendarId
                  required: true
                  schema:
                      type: string
                - description:
                      Whether to use the foregroundColor and backgroundColor fields to
                      write the calendar colors (RGB). If this feature is used, the
                      index-based colorId field will be set to the best matching option
                      automatically. Optional. The default is False.
                  in: query
                  name: colorRgbFormat
                  schema:
                      type: boolean
            requestBody:
                $ref: "#/components/requestBodies/CalendarListEntry"
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/CalendarListEntry"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
            tags:
                - calendarList
    /users/me/settings:
        get:
            description: Returns all user settings for the authenticated user.
            operationId: calendar.settings.list
            parameters:
                - description:
                      Maximum number of entries returned on one result page. By default
                      the value is 100 entries. The page size can never be larger than 250
                      entries. Optional.
                  in: query
                  name: maxResults
                  schema:
                      type: integer
                      minimum: 1
                - description: Token specifying which result page to return. Optional.
                  in: query
                  name: pageToken
                  schema:
                      type: string
                - description: >-
                      Token obtained from the nextSyncToken field returned on the last
                      page of results from the previous list request. It makes the result
                      of this list request contain only entries that have changed since
                      then.

                      If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.

                      Learn more about incremental synchronization.

                      Optional. The default is to return all entries.
                  in: query
                  name: syncToken
                  schema:
                      type: string
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/Settings"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.readonly
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.readonly
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.settings.readonly
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.settings.readonly
            tags:
                - settings
        parameters:
            - $ref: "#/components/parameters/alt"
            - $ref: "#/components/parameters/fields"
            - $ref: "#/components/parameters/key"
            - $ref: "#/components/parameters/oauth_token"
            - $ref: "#/components/parameters/prettyPrint"
            - $ref: "#/components/parameters/quotaUser"
            - $ref: "#/components/parameters/userIp"
    /users/me/settings/watch:
        parameters:
            - $ref: "#/components/parameters/alt"
            - $ref: "#/components/parameters/fields"
            - $ref: "#/components/parameters/key"
            - $ref: "#/components/parameters/oauth_token"
            - $ref: "#/components/parameters/prettyPrint"
            - $ref: "#/components/parameters/quotaUser"
            - $ref: "#/components/parameters/userIp"
        post:
            description: Watch for changes to Settings resources.
            operationId: calendar.settings.watch
            parameters:
                - description:
                      Maximum number of entries returned on one result page. By default
                      the value is 100 entries. The page size can never be larger than 250
                      entries. Optional.
                  in: query
                  name: maxResults
                  schema:
                      type: integer
                      minimum: 1
                - description: Token specifying which result page to return. Optional.
                  in: query
                  name: pageToken
                  schema:
                      type: string
                - description: >-
                      Token obtained from the nextSyncToken field returned on the last
                      page of results from the previous list request. It makes the result
                      of this list request contain only entries that have changed since
                      then.

                      If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.

                      Learn more about incremental synchronization.

                      Optional. The default is to return all entries.
                  in: query
                  name: syncToken
                  schema:
                      type: string
            requestBody:
                $ref: "#/components/requestBodies/Channel"
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/Channel"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.readonly
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.readonly
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.settings.readonly
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.settings.readonly
            tags:
                - settings
    "/users/me/settings/{setting}":
        get:
            description: Returns a single user setting.
            operationId: calendar.settings.get
            parameters:
                - description: The id of the user setting.
                  in: path
                  name: setting
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Successful response
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/Setting"
            security:
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.readonly
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.readonly
                - Oauth2:
                      - https://www.googleapis.com/auth/calendar.settings.readonly
                  Oauth2c:
                      - https://www.googleapis.com/auth/calendar.settings.readonly
            tags:
                - settings
        parameters:
            - $ref: "#/components/parameters/alt"
            - $ref: "#/components/parameters/fields"
            - $ref: "#/components/parameters/key"
            - $ref: "#/components/parameters/oauth_token"
            - $ref: "#/components/parameters/prettyPrint"
            - $ref: "#/components/parameters/quotaUser"
            - $ref: "#/components/parameters/userIp"
servers:
    - url: https://www.googleapis.com/calendar/v3
components:
    parameters:
        alt:
            description: Data format for the response.
            in: query
            name: alt
            schema:
                type: string
                enum:
                    - json
                default: json
        fields:
            description: Selector specifying which fields to include in a partial response.
            in: query
            name: fields
            schema:
                type: string
        key:
            description:
                API key. Your API key identifies your project and provides you with API
                access, quota, and reports. Required unless you provide an OAuth 2.0
                token.
            in: query
            name: key
            schema:
                type: string
        oauth_token:
            description: OAuth 2.0 token for the current user.
            in: query
            name: oauth_token
            schema:
                type: string
        prettyPrint:
            description: Returns response with indentations and line breaks.
            in: query
            name: prettyPrint
            schema:
                type: boolean
                default: true
        quotaUser:
            description:
                An opaque string that represents a user for quota purposes. Must not
                exceed 40 characters.
            in: query
            name: quotaUser
            schema:
                type: string
        userIp:
            description: Deprecated. Please use quotaUser instead.
            in: query
            name: userIp
            schema:
                type: string
    requestBodies:
        Channel:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Channel"
        Calendar:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Calendar"
        AclRule:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/AclRule"
        Event:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Event"
        CalendarListEntry:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/CalendarListEntry"
    securitySchemes:
        ApiKeyAuth: # arbitrary name for the security scheme
            type: apiKey
            in: header # can be "header", "query" or "cookie"
            name: X-API-KEY # name of the header, query parameter or cookie
            description: When you sign up for an account, you are given your first secret API key. To do so please follow this link. Also you can generate additional API keys, and delete API keys (as you may need to rotate your keys in the future). All API keys can be restricted to a small set of permissions (restricted API keys).
            x-document: ApiKeyAuth
        Oauth2:
            description: Oauth 2.0 implicit authentication
            type: oauth2
            flows:
                implicit:
                    authorizationUrl: https://accounts.google.com/o/oauth2/auth
                    scopes:
                        https://www.googleapis.com/auth/calendar:
                            See, edit, share, and permanently delete all the calendars you can
                            access using Google Calendar
                        https://www.googleapis.com/auth/calendar.events: View and edit events on all your calendars
                        https://www.googleapis.com/auth/calendar.events.readonly: View events on all your calendars
                        https://www.googleapis.com/auth/calendar.readonly: View your calendars
                        https://www.googleapis.com/auth/calendar.settings.readonly: View your Calendar settings
        Oauth2c:
            description: Oauth 2.0 accessCode authentication
            type: oauth2
            flows:
                authorizationCode:
                    authorizationUrl: https://accounts.google.com/o/oauth2/auth
                    tokenUrl: https://accounts.google.com/o/oauth2/token
                    scopes:
                        https://www.googleapis.com/auth/calendar:
                            See, edit, share, and permanently delete all the calendars you can
                            access using Google Calendar
                        https://www.googleapis.com/auth/calendar.events: View and edit events on all your calendars
                        https://www.googleapis.com/auth/calendar.events.readonly: View events on all your calendars
                        https://www.googleapis.com/auth/calendar.readonly: View your calendars
                        https://www.googleapis.com/auth/calendar.settings.readonly: View your Calendar settings
    schemas:
        Acl:
            properties:
                etag:
                    description: ETag of the collection.
                    type: string
                items:
                    description: List of rules on the access control list.
                    items:
                        $ref: "#/components/schemas/AclRule"
                    type: array
                kind:
                    default: calendar#acl
                    description: Type of the collection ("calendar#acl").
                    type: string
                nextPageToken:
                    description:
                        Token used to access the next page of this result. Omitted if no
                        further results are available, in which case nextSyncToken is
                        provided.
                    type: string
                nextSyncToken:
                    description:
                        Token used at a later point in time to retrieve only the entries
                        that have changed since this result was returned. Omitted if further
                        results are available, in which case nextPageToken is provided.
                    type: string
            type: object
        AclRule:
            properties:
                etag:
                    description: ETag of the resource.
                    type: string
                id:
                    description: Identifier of the ACL rule.
                    type: string
                kind:
                    default: calendar#aclRule
                    description: Type of the resource ("calendar#aclRule").
                    type: string
                role:
                    description: >-
                        The role assigned to the scope. Possible values are:

                        - "none" - Provides no access.

                        - "freeBusyReader" - Provides read access to free/busy information.

                        - "reader" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden.

                        - "writer" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible.

                        - "owner" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.
                    type: string
                scope:
                    description: The scope of the rule.
                    properties:
                        type:
                            description: >-
                                The type of the scope. Possible values are:

                                - "default" - The public scope. This is the default value.

                                - "user" - Limits the scope to a single user.

                                - "group" - Limits the scope to a group.

                                - "domain" - Limits the scope to a domain.  Note: The permissions granted to the "default", or public, scope apply to any user, authenticated or not.
                            type: string
                        value:
                            description:
                                The email address of a user or group, or the name of a domain,
                                depending on the scope type. Omitted for type "default".
                            type: string
                    type: object
            type: object
        Calendar:
            properties:
                conferenceProperties:
                    $ref: "#/components/schemas/ConferenceProperties"
                description:
                    description: Description of the calendar. Optional.
                    type: string
                etag:
                    description: ETag of the resource.
                    type: string
                id:
                    description:
                        Identifier of the calendar. To retrieve IDs call the
                        calendarList.list() method.
                    type: string
                kind:
                    default: calendar#calendar
                    description: Type of the resource ("calendar#calendar").
                    type: string
                location:
                    description: Geographic location of the calendar as free-form text. Optional.
                    type: string
                summary:
                    description: Title of the calendar.
                    type: string
                timeZone:
                    description:
                        The time zone of the calendar. (Formatted as an IANA Time Zone
                        Database name, e.g. "Europe/Zurich".) Optional.
                    type: string
            type: object
        CalendarList:
            properties:
                etag:
                    description: ETag of the collection.
                    type: string
                items:
                    description: Calendars that are present on the user's calendar list.
                    items:
                        $ref: "#/components/schemas/CalendarListEntry"
                    type: array
                kind:
                    default: calendar#calendarList
                    description: Type of the collection ("calendar#calendarList").
                    type: string
                nextPageToken:
                    description:
                        Token used to access the next page of this result. Omitted if no
                        further results are available, in which case nextSyncToken is
                        provided.
                    type: string
                nextSyncToken:
                    description:
                        Token used at a later point in time to retrieve only the entries
                        that have changed since this result was returned. Omitted if further
                        results are available, in which case nextPageToken is provided.
                    type: string
            type: object
        CalendarListEntry:
            properties:
                accessRole:
                    description: >-
                        The effective access role that the authenticated user has on the
                        calendar. Read-only. Possible values are:

                        - "freeBusyReader" - Provides read access to free/busy information.

                        - "reader" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden.

                        - "writer" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible.

                        - "owner" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.
                    type: string
                backgroundColor:
                    description:
                        The main color of the calendar in the hexadecimal format "#0088aa".
                        This property supersedes the index-based colorId property. To set or
                        change this property, you need to specify colorRgbFormat=true in the
                        parameters of the insert, update and patch methods. Optional.
                    type: string
                colorId:
                    description:
                        The color of the calendar. This is an ID referring to an entry in
                        the calendar section of the colors definition (see the colors
                        endpoint). This property is superseded by the backgroundColor and
                        foregroundColor properties and can be ignored when using these
                        properties. Optional.
                    type: string
                conferenceProperties:
                    $ref: "#/components/schemas/ConferenceProperties"
                defaultReminders:
                    description:
                        The default reminders that the authenticated user has for this
                        calendar.
                    items:
                        $ref: "#/components/schemas/EventReminder"
                    type: array
                deleted:
                    default: false
                    description:
                        Whether this calendar list entry has been deleted from the calendar
                        list. Read-only. Optional. The default is False.
                    type: boolean
                description:
                    description: Description of the calendar. Optional. Read-only.
                    type: string
                etag:
                    description: ETag of the resource.
                    type: string
                foregroundColor:
                    description:
                        The foreground color of the calendar in the hexadecimal format
                        "#ffffff". This property supersedes the index-based colorId
                        property. To set or change this property, you need to specify
                        colorRgbFormat=true in the parameters of the insert, update and
                        patch methods. Optional.
                    type: string
                hidden:
                    default: false
                    description:
                        Whether the calendar has been hidden from the list. Optional. The
                        default is False.
                    type: boolean
                id:
                    description: Identifier of the calendar.
                    type: string
                kind:
                    default: calendar#calendarListEntry
                    description: Type of the resource ("calendar#calendarListEntry").
                    type: string
                location:
                    description:
                        Geographic location of the calendar as free-form text. Optional.
                        Read-only.
                    type: string
                notificationSettings:
                    description:
                        The notifications that the authenticated user is receiving for this
                        calendar.
                    properties:
                        notifications:
                            description: The list of notifications set for this calendar.
                            items:
                                $ref: "#/components/schemas/CalendarNotification"
                            type: array
                    type: object
                primary:
                    default: false
                    description:
                        Whether the calendar is the primary calendar of the authenticated
                        user. Read-only. Optional. The default is False.
                    type: boolean
                selected:
                    default: false
                    description:
                        Whether the calendar content shows up in the calendar UI. Optional.
                        The default is False.
                    type: boolean
                summary:
                    description: Title of the calendar. Read-only.
                    type: string
                summaryOverride:
                    description:
                        The summary that the authenticated user has set for this calendar.
                        Optional.
                    type: string
                timeZone:
                    description: The time zone of the calendar. Optional. Read-only.
                    type: string
            type: object
        CalendarNotification:
            properties:
                method:
                    description: >-
                        The method used to deliver the notification. Possible values are:

                        - "email" - Notifications are sent via email.

                        - "sms" - Deprecated. Once this feature is shutdown, the API will no longer return notifications using this method. Any newly added SMS notifications will be ignored. See  Google Calendar SMS notifications to be removed for more information.

                        Notifications are sent via SMS. This value is read-only and is ignored on inserts and updates. SMS notifications are only available for G Suite customers.

                        Required when adding a notification.
                    type: string
                type:
                    description: >-
                        The type of notification. Possible values are:

                        - "eventCreation" - Notification sent when a new event is put on the calendar.

                        - "eventChange" - Notification sent when an event is changed.

                        - "eventCancellation" - Notification sent when an event is cancelled.

                        - "eventResponse" - Notification sent when an attendee responds to the event invitation.

                        - "agenda" - An agenda with the events of the day (sent out in the morning).

                        Required when adding a notification.
                    type: string
            type: object
        Channel:
            properties:
                address:
                    description: The address where notifications are delivered for this channel.
                    type: string
                expiration:
                    description:
                        Date and time of notification channel expiration, expressed as a
                        Unix timestamp, in milliseconds. Optional.
                    format: int64
                    type: string
                id:
                    description: A UUID or similar unique string that identifies this channel.
                    type: string
                kind:
                    default: api#channel
                    description:
                        Identifies this as a notification channel used to watch for changes
                        to a resource, which is "api#channel".
                    type: string
                params:
                    additionalProperties:
                        description: Declares a new parameter by name.
                        type: string
                    description:
                        Additional parameters controlling delivery channel behavior.
                        Optional.
                    type: object
                payload:
                    description: A Boolean value to indicate whether payload is wanted. Optional.
                    type: boolean
                resourceId:
                    description:
                        An opaque ID that identifies the resource being watched on this
                        channel. Stable across different API versions.
                    type: string
                resourceUri:
                    description: A version-specific identifier for the watched resource.
                    type: string
                token:
                    description:
                        An arbitrary string delivered to the target address with each
                        notification delivered over this channel. Optional.
                    type: string
                type:
                    description: The type of delivery mechanism used for this channel.
                    type: string
            type: object
        ColorDefinition:
            properties:
                background:
                    description: The background color associated with this color definition.
                    type: string
                foreground:
                    description:
                        The foreground color that can be used to write on top of a
                        background with 'background' color.
                    type: string
            type: object
        Colors:
            properties:
                calendar:
                    additionalProperties:
                        $ref: "#/components/schemas/ColorDefinition"
                    description:
                        A global palette of calendar colors, mapping from the color ID to
                        its definition. A calendarListEntry resource refers to one of these
                        color IDs in its color field. Read-only.
                    type: object
                event:
                    additionalProperties:
                        $ref: "#/components/schemas/ColorDefinition"
                    description:
                        A global palette of event colors, mapping from the color ID to its
                        definition. An event resource may refer to one of these color IDs in
                        its color field. Read-only.
                    type: object
                kind:
                    default: calendar#colors
                    description: Type of the resource ("calendar#colors").
                    type: string
                updated:
                    description:
                        Last modification time of the color palette (as a RFC3339
                        timestamp). Read-only.
                    format: date-time
                    type: string
            type: object
        ConferenceData:
            properties:
                conferenceId:
                    description: >-
                        The ID of the conference.

                        Can be used by developers to keep track of conferences, should not be displayed to users.

                        Values for solution types:

                        - "eventHangout": unset.

                        - "eventNamedHangout": the name of the Hangout.

                        - "hangoutsMeet": the 10-letter meeting code, for example "aaa-bbbb-ccc".

                        - "addOn": defined by 3P conference provider.  Optional.
                    type: string
                conferenceSolution:
                    $ref: "#/components/schemas/ConferenceSolution"
                createRequest:
                    $ref: "#/components/schemas/CreateConferenceRequest"
                entryPoints:
                    description: >-
                        Information about individual conference entry points, such as URLs
                        or phone numbers.

                        All of them must belong to the same conference.

                        Either conferenceSolution and at least one entryPoint, or createRequest is required.
                    items:
                        $ref: "#/components/schemas/EntryPoint"
                    type: array
                notes:
                    description:
                        Additional notes (such as instructions from the domain
                        administrator, legal notices) to display to the user. Can contain
                        HTML. The maximum length is 2048 characters. Optional.
                    type: string
                parameters:
                    $ref: "#/components/schemas/ConferenceParameters"
                signature:
                    description: >-
                        The signature of the conference data.

                        Generated on server side. Must be preserved while copying the conference data between events, otherwise the conference data will not be copied.

                        Unset for a conference with a failed create request.

                        Optional for a conference with a pending create request.
                    type: string
            type: object
        ConferenceParameters:
            properties:
                addOnParameters:
                    $ref: "#/components/schemas/ConferenceParametersAddOnParameters"
            type: object
        ConferenceParametersAddOnParameters:
            properties:
                parameters:
                    additionalProperties:
                        type: string
                    type: object
            type: object
        ConferenceProperties:
            properties:
                allowedConferenceSolutionTypes:
                    description: >-
                        The types of conference solutions that are supported for this
                        calendar.

                        The possible values are:

                        - "eventHangout"

                        - "eventNamedHangout"

                        - "hangoutsMeet"  Optional.
                    items:
                        type: string
                    type: array
            type: object
        ConferenceRequestStatus:
            properties:
                statusCode:
                    description: >-
                        The current status of the conference create request. Read-only.

                        The possible values are:

                        - "pending": the conference create request is still being processed.

                        - "success": the conference create request succeeded, the entry points are populated.

                        - "failure": the conference create request failed, there are no entry points.
                    type: string
            type: object
        ConferenceSolution:
            properties:
                iconUri:
                    description: The user-visible icon for this solution.
                    type: string
                key:
                    $ref: "#/components/schemas/ConferenceSolutionKey"
                name:
                    description: The user-visible name of this solution. Not localized.
                    type: string
            type: object
        ConferenceSolutionKey:
            properties:
                type:
                    description: >-
                        The conference solution type.

                        If a client encounters an unfamiliar or empty type, it should still be able to display the entry points. However, it should disallow modifications.

                        The possible values are:

                        - "eventHangout" for Hangouts for consumers (http://hangouts.google.com)

                        - "eventNamedHangout" for classic Hangouts for G Suite users (http://hangouts.google.com)

                        - "hangoutsMeet" for Hangouts Meet (http://meet.google.com)

                        - "addOn" for 3P conference providers
                    type: string
            type: object
        CreateConferenceRequest:
            properties:
                conferenceSolutionKey:
                    $ref: "#/components/schemas/ConferenceSolutionKey"
                requestId:
                    description: >-
                        The client-generated unique ID for this request.

                        Clients should regenerate this ID for every new request. If an ID provided is the same as for the previous request, the request is ignored.
                    type: string
                status:
                    $ref: "#/components/schemas/ConferenceRequestStatus"
            type: object
        EntryPoint:
            properties:
                accessCode:
                    description: >-
                        The access code to access the conference. The maximum length is 128
                        characters.

                        When creating new conference data, populate only the subset of {meetingCode, accessCode, passcode, password, pin} fields that match the terminology that the conference provider uses. Only the populated fields should be displayed.

                        Optional.
                    type: string
                entryPointFeatures:
                    description:
                        Features of the entry point, such as being toll or toll-free. One
                        entry point can have multiple features. However, toll and toll-free
                        cannot be both set on the same entry point.
                    items:
                        type: string
                    type: array
                entryPointType:
                    description: >-
                        The type of the conference entry point.

                        Possible values are:

                        - "video" - joining a conference over HTTP. A conference can have zero or one video entry point.

                        - "phone" - joining a conference by dialing a phone number. A conference can have zero or more phone entry points.

                        - "sip" - joining a conference over SIP. A conference can have zero or one sip entry point.

                        - "more" - further conference joining instructions, for example additional phone numbers. A conference can have zero or one more entry point. A conference with only a more entry point is not a valid conference.
                    type: string
                label:
                    description: >-
                        The label for the URI. Visible to end users. Not localized. The
                        maximum length is 512 characters.

                        Examples:

                        - for video: meet.google.com/aaa-bbbb-ccc

                        - for phone: +1 123 268 2601

                        - for sip: 12345678@altostrat.com

                        - for more: should not be filled

                        Optional.
                    type: string
                meetingCode:
                    description: >-
                        The meeting code to access the conference. The maximum length is 128
                        characters.

                        When creating new conference data, populate only the subset of {meetingCode, accessCode, passcode, password, pin} fields that match the terminology that the conference provider uses. Only the populated fields should be displayed.

                        Optional.
                    type: string
                passcode:
                    description: >-
                        The passcode to access the conference. The maximum length is 128
                        characters.

                        When creating new conference data, populate only the subset of {meetingCode, accessCode, passcode, password, pin} fields that match the terminology that the conference provider uses. Only the populated fields should be displayed.
                    type: string
                password:
                    description: >-
                        The password to access the conference. The maximum length is 128
                        characters.

                        When creating new conference data, populate only the subset of {meetingCode, accessCode, passcode, password, pin} fields that match the terminology that the conference provider uses. Only the populated fields should be displayed.

                        Optional.
                    type: string
                pin:
                    description: >-
                        The PIN to access the conference. The maximum length is 128
                        characters.

                        When creating new conference data, populate only the subset of {meetingCode, accessCode, passcode, password, pin} fields that match the terminology that the conference provider uses. Only the populated fields should be displayed.

                        Optional.
                    type: string
                regionCode:
                    description: >-
                        The CLDR/ISO 3166 region code for the country associated with this
                        phone access. Example: "SE" for Sweden.

                        Calendar backend will populate this field only for EntryPointType.PHONE.
                    type: string
                uri:
                    description: >-
                        The URI of the entry point. The maximum length is 1300 characters.

                        Format:

                        - for video, http: or https: schema is required.

                        - for phone, tel: schema is required. The URI should include the entire dial sequence (e.g., tel:+12345678900,,,123456789;1234).

                        - for sip, sip: schema is required, e.g., sip:12345678@myprovider.com.

                        - for more, http: or https: schema is required.
                    type: string
            type: object
        Error:
            properties:
                domain:
                    description: Domain, or broad category, of the error.
                    type: string
                reason:
                    description: >-
                        Specific reason for the error. Some of the possible values are:

                        - "groupTooBig" - The group of users requested is too large for a single query.

                        - "tooManyCalendarsRequested" - The number of calendars requested is too large for a single query.

                        - "notFound" - The requested resource was not found.

                        - "internalError" - The API service has encountered an internal error.  Additional error types may be added in the future, so clients should gracefully handle additional error statuses not included in this list.
                    type: string
            type: object
        Event:
            properties:
                anyoneCanAddSelf:
                    default: false
                    description:
                        Whether anyone can invite themselves to the event (currently works
                        for Google+ events only). Optional. The default is False.
                    type: boolean
                attachments:
                    description: >-
                        File attachments for the event. Currently only Google Drive
                        attachments are supported.

                        In order to modify attachments the supportsAttachments request parameter should be set to true.

                        There can be at most 25 attachments per event,
                    items:
                        $ref: "#/components/schemas/EventAttachment"
                    type: array
                attendees:
                    description:
                        The attendees of the event. See the Events with attendees guide for
                        more information on scheduling events with other calendar users.
                    items:
                        $ref: "#/components/schemas/EventAttendee"
                    type: array
                attendeesOmitted:
                    default: false
                    description:
                        Whether attendees may have been omitted from the event's
                        representation. When retrieving an event, this may be due to a
                        restriction specified by the maxAttendee query parameter. When
                        updating an event, this can be used to only update the participant's
                        response. Optional. The default is False.
                    type: boolean
                colorId:
                    description:
                        The color of the event. This is an ID referring to an entry in the
                        event section of the colors definition (see the  colors endpoint).
                        Optional.
                    type: string
                conferenceData:
                    $ref: "#/components/schemas/ConferenceData"
                created:
                    description: Creation time of the event (as a RFC3339 timestamp). Read-only.
                    format: date-time
                    type: string
                creator:
                    description: The creator of the event. Read-only.
                    properties:
                        displayName:
                            description: The creator's name, if available.
                            type: string
                        email:
                            description: The creator's email address, if available.
                            type: string
                        id:
                            description:
                                The creator's Profile ID, if available. It corresponds to the id
                                field in the People collection of the Google+ API
                            type: string
                        self:
                            default: false
                            description:
                                Whether the creator corresponds to the calendar on which this
                                copy of the event appears. Read-only. The default is False.
                            type: boolean
                    type: object
                description:
                    description: Description of the event. Optional.
                    type: string
                end:
                    $ref: "#/components/schemas/EventDateTime"
                endTimeUnspecified:
                    default: false
                    description:
                        Whether the end time is actually unspecified. An end time is still
                        provided for compatibility reasons, even if this attribute is set to
                        True. The default is False.
                    type: boolean
                etag:
                    description: ETag of the resource.
                    type: string
                extendedProperties:
                    description: Extended properties of the event.
                    properties:
                        private:
                            additionalProperties:
                                description: The name of the private property and the corresponding value.
                                type: string
                            description:
                                Properties that are private to the copy of the event that
                                appears on this calendar.
                            type: object
                        shared:
                            additionalProperties:
                                description: The name of the shared property and the corresponding value.
                                type: string
                            description:
                                Properties that are shared between copies of the event on other
                                attendees' calendars.
                            type: object
                    type: object
                gadget:
                    description: A gadget that extends this event.
                    properties:
                        display:
                            description: >-
                                The gadget's display mode. Optional. Possible values are:

                                - "icon" - The gadget displays next to the event's title in the calendar view.

                                - "chip" - The gadget displays when the event is clicked.
                            type: string
                        height:
                            description:
                                The gadget's height in pixels. The height must be an integer
                                greater than 0. Optional.
                            format: int32
                            type: integer
                        iconLink:
                            description: The gadget's icon URL. The URL scheme must be HTTPS.
                            type: string
                        link:
                            description: The gadget's URL. The URL scheme must be HTTPS.
                            type: string
                        preferences:
                            additionalProperties:
                                description: The preference name and corresponding value.
                                type: string
                            description: Preferences.
                            type: object
                        title:
                            description: The gadget's title.
                            type: string
                        type:
                            description: The gadget's type.
                            type: string
                        width:
                            description:
                                The gadget's width in pixels. The width must be an integer
                                greater than 0. Optional.
                            format: int32
                            type: integer
                    type: object
                guestsCanInviteOthers:
                    default: true
                    description:
                        Whether attendees other than the organizer can invite others to the
                        event. Optional. The default is True.
                    type: boolean
                guestsCanModify:
                    default: false
                    description:
                        Whether attendees other than the organizer can modify the event.
                        Optional. The default is False.
                    type: boolean
                guestsCanSeeOtherGuests:
                    default: true
                    description:
                        Whether attendees other than the organizer can see who the event's
                        attendees are. Optional. The default is True.
                    type: boolean
                hangoutLink:
                    description:
                        An absolute link to the Google+ hangout associated with this event.
                        Read-only.
                    type: string
                htmlLink:
                    description:
                        An absolute link to this event in the Google Calendar Web UI.
                        Read-only.
                    type: string
                iCalUID:
                    description: >-
                        Event unique identifier as defined in RFC5545. It is used to
                        uniquely identify events accross calendaring systems and must be
                        supplied when importing events via the import method.

                        Note that the icalUID and the id are not identical and only one of them should be supplied at event creation time. One difference in their semantics is that in recurring events, all occurrences of one event have different ids while they all share the same icalUIDs.
                    type: string
                id:
                    description: >-
                        Opaque identifier of the event. When creating new single or
                        recurring events, you can specify their IDs. Provided IDs must
                        follow these rules:

                        - characters allowed in the ID are those used in base32hex encoding, i.e. lowercase letters a-v and digits 0-9, see section 3.1.2 in RFC2938

                        - the length of the ID must be between 5 and 1024 characters

                        - the ID must be unique per calendar  Due to the globally distributed nature of the system, we cannot guarantee that ID collisions will be detected at event creation time. To minimize the risk of collisions we recommend using an established UUID algorithm such as one described in RFC4122.

                        If you do not specify an ID, it will be automatically generated by the server.

                        Note that the icalUID and the id are not identical and only one of them should be supplied at event creation time. One difference in their semantics is that in recurring events, all occurrences of one event have different ids while they all share the same icalUIDs.
                    type: string
                kind:
                    default: calendar#event
                    description: Type of the resource ("calendar#event").
                    type: string
                location:
                    description: Geographic location of the event as free-form text. Optional.
                    type: string
                locked:
                    default: false
                    description:
                        Whether this is a locked event copy where no changes can be made to
                        the main event fields "summary", "description", "location", "start",
                        "end" or "recurrence". The default is False. Read-Only.
                    type: boolean
                organizer:
                    description:
                        The organizer of the event. If the organizer is also an attendee,
                        this is indicated with a separate entry in attendees with the
                        organizer field set to True. To change the organizer, use the move
                        operation. Read-only, except when importing an event.
                    properties:
                        displayName:
                            description: The organizer's name, if available.
                            type: string
                        email:
                            description:
                                The organizer's email address, if available. It must be a valid
                                email address as per RFC5322.
                            type: string
                        id:
                            description:
                                The organizer's Profile ID, if available. It corresponds to the
                                id field in the People collection of the Google+ API
                            type: string
                        self:
                            default: false
                            description:
                                Whether the organizer corresponds to the calendar on which this
                                copy of the event appears. Read-only. The default is False.
                            type: boolean
                    type: object
                originalStartTime:
                    $ref: "#/components/schemas/EventDateTime"
                privateCopy:
                    default: false
                    description:
                        If set to True, Event propagation is disabled. Note that it is not
                        the same thing as Private event properties. Optional. Immutable. The
                        default is False.
                    type: boolean
                recurrence:
                    description:
                        List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event,
                        as specified in RFC5545. Note that DTSTART and DTEND lines are not
                        allowed in this field; event start and end times are specified in
                        the start and end fields. This field is omitted for single events or
                        instances of recurring events.
                    items:
                        type: string
                    type: array
                recurringEventId:
                    description:
                        For an instance of a recurring event, this is the id of the
                        recurring event to which this instance belongs. Immutable.
                    type: string
                reminders:
                    description: Information about the event's reminders for the authenticated user.
                    properties:
                        overrides:
                            description:
                                If the event doesn't use the default reminders, this lists the
                                reminders specific to the event, or, if not set, indicates that
                                no reminders are set for this event. The maximum number of
                                override reminders is 5.
                            items:
                                $ref: "#/components/schemas/EventReminder"
                            type: array
                        useDefault:
                            description: Whether the default reminders of the calendar apply to the event.
                            type: boolean
                    type: object
                sequence:
                    description: Sequence number as per iCalendar.
                    format: int32
                    type: integer
                source:
                    description:
                        Source from which the event was created. For example, a web page, an
                        email message or any document identifiable by an URL with HTTP or
                        HTTPS scheme. Can only be seen or modified by the creator of the
                        event.
                    properties:
                        title:
                            description:
                                Title of the source; for example a title of a web page or an
                                email subject.
                            type: string
                        url:
                            description:
                                URL of the source pointing to a resource. The URL scheme must be
                                HTTP or HTTPS.
                            type: string
                    type: object
                start:
                    $ref: "#/components/schemas/EventDateTime"
                status:
                    description: >-
                        Status of the event. Optional. Possible values are:

                        - "confirmed" - The event is confirmed. This is the default status.

                        - "tentative" - The event is tentatively confirmed.

                        - "cancelled" - The event is cancelled (deleted). The list method returns cancelled events only on incremental sync (when syncToken or updatedMin are specified) or if the showDeleted flag is set to true. The get method always returns them.

                        A cancelled status represents two different states depending on the event type:

                        - Cancelled exceptions of an uncancelled recurring event indicate that this instance should no longer be presented to the user. Clients should store these events for the lifetime of the parent recurring event.

                        Cancelled exceptions are only guaranteed to have values for the id, recurringEventId and originalStartTime fields populated. The other fields might be empty.

                        - All other cancelled events represent deleted events. Clients should remove their locally synced copies. Such cancelled events will eventually disappear, so do not rely on them being available indefinitely.

                        Deleted events are only guaranteed to have the id field populated.   On the organizer's calendar, cancelled events continue to expose event details (summary, location, etc.) so that they can be restored (undeleted). Similarly, the events to which the user was invited and that they manually removed continue to provide details. However, incremental sync requests with showDeleted set to false will not return these details.

                        If an event changes its organizer (for example via the move operation) and the original organizer is not on the attendee list, it will leave behind a cancelled event where only the id field is guaranteed to be populated.
                    type: string
                summary:
                    description: Title of the event.
                    type: string
                transparency:
                    default: opaque
                    description: >-
                        Whether the event blocks time on the calendar. Optional. Possible
                        values are:

                        - "opaque" - Default value. The event does block time on the calendar. This is equivalent to setting Show me as to Busy in the Calendar UI.

                        - "transparent" - The event does not block time on the calendar. This is equivalent to setting Show me as to Available in the Calendar UI.
                    type: string
                updated:
                    description:
                        Last modification time of the event (as a RFC3339 timestamp).
                        Read-only.
                    format: date-time
                    type: string
                visibility:
                    default: default
                    description: >-
                        Visibility of the event. Optional. Possible values are:

                        - "default" - Uses the default visibility for events on the calendar. This is the default value.

                        - "public" - The event is public and event details are visible to all readers of the calendar.

                        - "private" - The event is private and only event attendees may view event details.

                        - "confidential" - The event is private. This value is provided for compatibility reasons.
                    type: string
            type: object
        EventAttachment:
            properties:
                fileId:
                    description: >-
                        ID of the attached file. Read-only.

                        For Google Drive files, this is the ID of the corresponding Files resource entry in the Drive API.
                    type: string
                fileUrl:
                    description: >-
                        URL link to the attachment.

                        For adding Google Drive file attachments use the same format as in alternateLink property of the Files resource in the Drive API.

                        Required when adding an attachment.
                    type: string
                iconLink:
                    description: URL link to the attachment's icon. Read-only.
                    type: string
                mimeType:
                    description: Internet media type (MIME type) of the attachment.
                    type: string
                title:
                    description: Attachment title.
                    type: string
            type: object
        EventAttendee:
            properties:
                additionalGuests:
                    default: 0
                    description: Number of additional guests. Optional. The default is 0.
                    format: int32
                    type: integer
                comment:
                    description: The attendee's response comment. Optional.
                    type: string
                displayName:
                    description: The attendee's name, if available. Optional.
                    type: string
                email:
                    description: >-
                        The attendee's email address, if available. This field must be
                        present when adding an attendee. It must be a valid email address as
                        per RFC5322.

                        Required when adding an attendee.
                    type: string
                id:
                    description:
                        The attendee's Profile ID, if available. It corresponds to the id
                        field in the People collection of the Google+ API
                    type: string
                optional:
                    default: false
                    description: Whether this is an optional attendee. Optional. The default is False.
                    type: boolean
                organizer:
                    description:
                        Whether the attendee is the organizer of the event. Read-only. The
                        default is False.
                    type: boolean
                resource:
                    default: false
                    description:
                        Whether the attendee is a resource. Can only be set when the
                        attendee is added to the event for the first time. Subsequent
                        modifications are ignored. Optional. The default is False.
                    type: boolean
                responseStatus:
                    description: >-
                        The attendee's response status. Possible values are:

                        - "needsAction" - The attendee has not responded to the invitation.

                        - "declined" - The attendee has declined the invitation.

                        - "tentative" - The attendee has tentatively accepted the invitation.

                        - "accepted" - The attendee has accepted the invitation.
                    type: string
                self:
                    default: false
                    description:
                        Whether this entry represents the calendar on which this copy of the
                        event appears. Read-only. The default is False.
                    type: boolean
            type: object
        EventDateTime:
            properties:
                date:
                    description: The date, in the format "yyyy-mm-dd", if this is an all-day event.
                    format: date
                    type: string
                dateTime:
                    description:
                        The time, as a combined date-time value (formatted according to
                        RFC3339). A time zone offset is required unless a time zone is
                        explicitly specified in timeZone.
                    format: date-time
                    type: string
                timeZone:
                    description:
                        The time zone in which the time is specified. (Formatted as an IANA
                        Time Zone Database name, e.g. "Europe/Zurich".) For recurring events
                        this field is required and specifies the time zone in which the
                        recurrence is expanded. For single events this field is optional and
                        indicates a custom time zone for the event start/end.
                    type: string
            type: object
        EventReminder:
            properties:
                method:
                    description: >-
                        The method used by this reminder. Possible values are:

                        - "email" - Reminders are sent via email.

                        - "sms" - Deprecated. Once this feature is shutdown, the API will no longer return reminders using this method. Any newly added SMS reminders will be ignored. See  Google Calendar SMS notifications to be removed for more information.

                        Reminders are sent via SMS. These are only available for G Suite customers. Requests to set SMS reminders for other account types are ignored.

                        - "popup" - Reminders are sent via a UI popup.

                        Required when adding a reminder.
                    type: string
                minutes:
                    description: >-
                        Number of minutes before the start of the event when the reminder
                        should trigger. Valid values are between 0 and 40320 (4 weeks in
                        minutes).

                        Required when adding a reminder.
                    format: int32
                    type: integer
            type: object
        Events:
            properties:
                accessRole:
                    description: >-
                        The user's access role for this calendar. Read-only. Possible values
                        are:

                        - "none" - The user has no access.

                        - "freeBusyReader" - The user has read access to free/busy information.

                        - "reader" - The user has read access to the calendar. Private events will appear to users with reader access, but event details will be hidden.

                        - "writer" - The user has read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible.

                        - "owner" - The user has ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.
                    type: string
                defaultReminders:
                    description:
                        The default reminders on the calendar for the authenticated user.
                        These reminders apply to all events on this calendar that do not
                        explicitly override them (i.e. do not have reminders.useDefault set
                        to True).
                    items:
                        $ref: "#/components/schemas/EventReminder"
                    type: array
                description:
                    description: Description of the calendar. Read-only.
                    type: string
                etag:
                    description: ETag of the collection.
                    type: string
                items:
                    description: List of events on the calendar.
                    items:
                        $ref: "#/components/schemas/Event"
                    type: array
                kind:
                    default: calendar#events
                    description: Type of the collection ("calendar#events").
                    type: string
                nextPageToken:
                    description:
                        Token used to access the next page of this result. Omitted if no
                        further results are available, in which case nextSyncToken is
                        provided.
                    type: string
                nextSyncToken:
                    description:
                        Token used at a later point in time to retrieve only the entries
                        that have changed since this result was returned. Omitted if further
                        results are available, in which case nextPageToken is provided.
                    type: string
                summary:
                    description: Title of the calendar. Read-only.
                    type: string
                timeZone:
                    description: The time zone of the calendar. Read-only.
                    type: string
                updated:
                    description:
                        Last modification time of the calendar (as a RFC3339 timestamp).
                        Read-only.
                    format: date-time
                    type: string
            type: object
        FreeBusyCalendar:
            properties:
                busy:
                    description:
                        List of time ranges during which this calendar should be regarded as
                        busy.
                    items:
                        $ref: "#/components/schemas/TimePeriod"
                    type: array
                errors:
                    description: Optional error(s) (if computation for the calendar failed).
                    items:
                        $ref: "#/components/schemas/Error"
                    type: array
            type: object
        FreeBusyGroup:
            properties:
                calendars:
                    description: List of calendars' identifiers within a group.
                    items:
                        type: string
                    type: array
                errors:
                    description: Optional error(s) (if computation for the group failed).
                    items:
                        $ref: "#/components/schemas/Error"
                    type: array
            type: object
        FreeBusyRequest:
            properties:
                calendarExpansionMax:
                    description:
                        Maximal number of calendars for which FreeBusy information is to be
                        provided. Optional. Maximum value is 50.
                    format: int32
                    type: integer
                groupExpansionMax:
                    description:
                        Maximal number of calendar identifiers to be provided for a single
                        group. Optional. An error is returned for a group with more members
                        than this value. Maximum value is 100.
                    format: int32
                    type: integer
                items:
                    description: List of calendars and/or groups to query.
                    items:
                        $ref: "#/components/schemas/FreeBusyRequestItem"
                    type: array
                timeMax:
                    description: The end of the interval for the query formatted as per RFC3339.
                    format: date-time
                    type: string
                timeMin:
                    description: The start of the interval for the query formatted as per RFC3339.
                    format: date-time
                    type: string
                timeZone:
                    default: UTC
                    description: Time zone used in the response. Optional. The default is UTC.
                    type: string
            type: object
        FreeBusyRequestItem:
            properties:
                id:
                    description: The identifier of a calendar or a group.
                    type: string
            type: object
        FreeBusyResponse:
            properties:
                calendars:
                    additionalProperties:
                        $ref: "#/components/schemas/FreeBusyCalendar"
                    description: List of free/busy information for calendars.
                    type: object
                groups:
                    additionalProperties:
                        $ref: "#/components/schemas/FreeBusyGroup"
                    description: Expansion of groups.
                    type: object
                kind:
                    default: calendar#freeBusy
                    description: Type of the resource ("calendar#freeBusy").
                    type: string
                timeMax:
                    description: The end of the interval.
                    format: date-time
                    type: string
                timeMin:
                    description: The start of the interval.
                    format: date-time
                    type: string
            type: object
        Setting:
            properties:
                etag:
                    description: ETag of the resource.
                    type: string
                id:
                    description: The id of the user setting.
                    type: string
                kind:
                    default: calendar#setting
                    description: Type of the resource ("calendar#setting").
                    type: string
                value:
                    description:
                        Value of the user setting. The format of the value depends on the ID
                        of the setting. It must always be a UTF-8 string of length up to
                        1024 characters.
                    type: string
            type: object
        Settings:
            properties:
                etag:
                    description: Etag of the collection.
                    type: string
                items:
                    description: List of user settings.
                    items:
                        $ref: "#/components/schemas/Setting"
                    type: array
                kind:
                    default: calendar#settings
                    description: Type of the collection ("calendar#settings").
                    type: string
                nextPageToken:
                    description:
                        Token used to access the next page of this result. Omitted if no
                        further results are available, in which case nextSyncToken is
                        provided.
                    type: string
                nextSyncToken:
                    description:
                        Token used at a later point in time to retrieve only the entries
                        that have changed since this result was returned. Omitted if further
                        results are available, in which case nextPageToken is provided.
                    type: string
            type: object
        TimePeriod:
            properties:
                end:
                    description: The (exclusive) end of the time period.
                    format: date-time
                    type: string
                start:
                    description: The (inclusive) start of the time period.
                    format: date-time
                    type: string
            type: object
